<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DSs-MacBook-Pro" ignored="0" name="UserAcceptance" tests="0" failures="0" timestamp="2022-02-22T11:28:11 PST" time="0.452" errors="0">
  <testcase name="@BeforeClass setUpClass" time="0.422" classname="io.cucumber.testng.AbstractTestNGCucumberTests">
    <failure type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at com.salesforce.steps.SFLoginStepDef.setup(java.lang.String)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at com.salesforce.steps.SFLoginStepDef.setup(java.lang.String)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:52)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:33)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:19)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:67)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:58)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:33)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:270)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:56)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:47)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(ThreadLocal.java:284)
at java.lang.ThreadLocal.setInitialValue(ThreadLocal.java:180)
at java.lang.ThreadLocal.get(ThreadLocal.java:170)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:40)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:35)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:114)
at io.cucumber.core.runtime.CucumberExecutionContext.runBeforeAllHooks(CucumberExecutionContext.java:65)
at io.cucumber.testng.TestNGCucumberRunner.<init>(TestNGCucumberRunner.java:124)
at io.cucumber.testng.AbstractTestNGCucumberTests.setUpClass(AbstractTestNGCucumberTests.java:27)
at java.util.ArrayList.forEach(ArrayList.java:1257)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpClass -->
</testsuite> <!-- UserAcceptance -->
